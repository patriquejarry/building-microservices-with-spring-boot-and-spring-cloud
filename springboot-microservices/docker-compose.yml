version: "3.8"

  # Start sequence
  # springboot-microservices_mysql
  # springboot-microservices_rabbitmq
  # springboot-microservices_service-registry
  # springboot-microservices_config-server
  # springboot-microservices_api-gateway
  # springboot-microservices_department-service
  # springboot-microservices_organization-service
  # springboot-microservices_employee-service

services:

  springboot-microservices_mysql:
    container_name: springboot-microservices_mysql-container
    image: mysql
    #restart: on-failure
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: employee_management

  springboot-microservices_rabbitmq:
    container_name: springboot-microservices_rabbitmq-container
    image: rabbitmq:3.12.2-management
    #restart: on-failure
    ports:
      - "5672:5672"
      - "15672:15672"
    depends_on:
      - springboot-microservices_mysql

#  springboot-microservices_service-registry:
#    container_name: springboot-microservices_service-registry-container
#    #image: springboot-microservices_service-registry
#    #restart: on-failure
#    build:
#      context: ./service-registry
#      dockerfile: Dockerfile
#    ports:
#      - "8761:8761"
#    depends_on:
#      - springboot-microservices_rabbitmq
#
#  springboot-microservices_config-server:
#    container_name: springboot-microservices_config-server-container
#    #image: springboot-microservices_config-server
#    #restart: on-failure
#    build:
#      context: ./config-server
#      dockerfile: Dockerfile
#    ports:
#      - "8888:8888"
#    environment:
#      - eureka.instance.client.serverUrl.defaultZone=http://springboot-microservices_service-registry:8761/eureka/
#      - eureka.client.service-url.defaultZone=http://springboot-microservices_service-registry:8761/eureka
#    depends_on:
#      - springboot-microservices_service-registry
#
#  springboot-microservices_api-gateway:
#    container_name: springboot-microservices_api-gateway-container
#    #image: springboot-microservices_api-gateway
#    #restart: on-failure
#    build:
#      context: ./api-gateway
#      dockerfile: Dockerfile
#    ports:
#      - "9191:9191"
#    environment:
#      - eureka.instance.client.serverUrl.defaultZone=http://springboot-microservices_service-registry:8761/eureka/
#      - eureka.client.service-url.defaultZone=http://springboot-microservices_service-registry:8761/eureka
#      #- spring.rabbitmq.host=springboot-microservices_rabbitmq
#    depends_on:
#      - springboot-microservices_config-server
#
#  springboot-microservices_department-service:
#    container_name: springboot-microservices_department-service-container
#    #image: springboot-microservices_department-service
#    #restart: on-failure
#    build:
#      context: ./department-service
#      dockerfile: Dockerfile
#    ports:
#      - "8080:8080"
#    environment:
#      - eureka.instance.client.serverUrl.defaultZone=http://springboot-microservices_service-registry:8761/eureka/
#      - eureka.client.service-url.defaultZone=http://springboot-microservices_service-registry:8761/eureka
#      - spring.rabbitmq.host=springboot-microservices_rabbitmq
#      #- spring.config.import=optional:configserver:http://springboot-microservices_config-server:8888
#      - spring.datasource.url=jdbc:mysql://springboot-microservices_mysql-container:3306/department_management
#    depends_on:
#      - springboot-microservices_config-server
#
#  springboot-microservices_organization-service:
#    container_name: springboot-microservices_organization-service-container
#    #image: springboot-microservices_organization-service
#    #restart: on-failure
#    build:
#      context: ./organization-service
#      dockerfile: Dockerfile
#    ports:
#      - "8082:8082"
#    environment:
#      - eureka.instance.client.serverUrl.defaultZone=http://springboot-microservices_service-registry:8761/eureka/
#      - eureka.client.service-url.defaultZone=http://springboot-microservices_service-registry:8761/eureka
#      - spring.rabbitmq.host=springboot-microservices_rabbitmq-container
#      #- spring.config.import=optional:configserver:http://springboot-microservices_config-server:8888
#      - spring.datasource.url=jdbc:mysql://springboot-microservices_mysql:3306/organization_management
#    depends_on:
#      - springboot-microservices_config-server
#
#  springboot-microservices_employee-service:
#    container_name: springboot-microservices_employee-service-container
#    #image: springboot-microservices_employee-service
#    #restart: on-failure
#    build:
#      context: ./employee-service
#      dockerfile: Dockerfile
#    ports:
#      - "8081:8081"
#    environment:
#      - eureka.instance.client.serverUrl.defaultZone=http://springboot-microservices_service-registry:8761/eureka/
#      - eureka.client.service-url.defaultZone=http://springboot-microservices_service-registry:8761/eureka
#      - spring.rabbitmq.host=springboot-microservices_rabbitmq
#      #- spring.config.import=optional:configserver:http://springboot-microservices_config-server:8888
#      - spring.datasource.url=jdbc:mysql://springboot-microservices_mysql-container:3306/employee_management
#    depends_on:
#      - springboot-microservices_config-server
